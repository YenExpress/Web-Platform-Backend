package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.33

import (
	"YenExpress/config"
	"YenExpress/service/searchAPI/graph/model"
	"context"
	"fmt"
)

// Drugs is the resolver for the Drugs field.
func (r *queryResolver) Drugs(ctx context.Context) ([]*model.Drug, error) {
	var drugs []*model.Drug
	err := config.DB.Preload("Category").Find(&drugs).Error
	if err == nil {
		return drugs, nil
	}
	return []*model.Drug{}, err
}

// DrugOrders is the resolver for the DrugOrders field.
func (r *queryResolver) DrugOrders(ctx context.Context) ([]*model.DrugOrder, error) {
	panic(fmt.Errorf("not implemented: DrugOrders - DrugOrders"))
}

// Categories is the resolver for the Categories field.
func (r *queryResolver) Categories(ctx context.Context) ([]*model.Category, error) {
	var categories []*model.Category
	err := config.DB.Preload("ParentCategory").Find(&categories).Error
	if err == nil {
		return categories, nil
	}
	return []*model.Category{}, err
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
